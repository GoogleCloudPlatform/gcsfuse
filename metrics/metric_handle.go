// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// **** DO NOT EDIT - FILE IS AUTO-GENERATED ****
package metrics

import (
	"context"
	"time"
)

// MetricHandle provides an interface for recording metrics.
// The methods of this interface are auto-generated from metrics.yaml.
// Each method corresponds to a metric defined in metrics.yaml.
type MetricHandle interface {
	// BufferedReadDownloadBlockLatency - The cumulative distribution of block download latencies, along with status: successful, cancelled, or failed.
	BufferedReadDownloadBlockLatency(ctx context.Context, duration time.Duration, status Status)

	// BufferedReadFallbackTriggerCount - The cumulative number of times the BufferedReader falls back to a different reader, along with the reason: random_read_detected or insufficient_memory.
	BufferedReadFallbackTriggerCount(inc int64, reason Reason)

	// BufferedReadReadLatency - The cumulative distribution of latencies for ReadAt calls served by the buffered reader.
	BufferedReadReadLatency(ctx context.Context, duration time.Duration)

	// BufferedReadScheduledBlockCount - The cumulative number of scheduled download blocks, along with their final status: successful, cancelled, or failed.
	BufferedReadScheduledBlockCount(inc int64, status Status)

	// FileCacheReadBytesCount - The cumulative number of bytes read from file cache along with read type - Sequential/Random
	FileCacheReadBytesCount(inc int64, readType ReadType)

	// FileCacheReadCount - Specifies the number of read requests made via file cache along with type - Sequential/Random and cache hit - true/false
	FileCacheReadCount(inc int64, cacheHit bool, readType ReadType)

	// FileCacheReadLatencies - The cumulative distribution of the file cache read latencies along with cache hit - true/false.
	FileCacheReadLatencies(ctx context.Context, duration time.Duration, cacheHit bool)

	// FsOpsCount - The cumulative number of ops processed by the file system.
	FsOpsCount(inc int64, fsOp FsOp)

	// FsOpsErrorCount - The cumulative number of errors generated by file system operations.
	FsOpsErrorCount(inc int64, fsErrorCategory FsErrorCategory, fsOp FsOp)

	// FsOpsLatency - The cumulative distribution of file system operation latencies
	FsOpsLatency(ctx context.Context, duration time.Duration, fsOp FsOp)

	// GcsDownloadBytesCount - The cumulative number of bytes downloaded from GCS along with type - Sequential/Random
	GcsDownloadBytesCount(inc int64, readType ReadType)

	// GcsReadBytesCount - The cumulative number of bytes read from GCS objects.
	GcsReadBytesCount(inc int64)

	// GcsReadCount - Specifies the number of gcs reads made along with type - Sequential/Random
	GcsReadCount(inc int64, readType ReadType)

	// GcsReaderCount - The cumulative number of GCS object readers opened or closed.
	GcsReaderCount(inc int64, ioMethod IoMethod)

	// GcsRequestCount - The cumulative number of GCS requests processed along with the GCS method.
	GcsRequestCount(inc int64, gcsMethod GcsMethod)

	// GcsRequestLatencies - The cumulative distribution of the GCS request latencies.
	GcsRequestLatencies(ctx context.Context, duration time.Duration, gcsMethod GcsMethod)

	// GcsRetryCount - The cumulative number of retry requests made to GCS.
	GcsRetryCount(inc int64, retryErrorCategory RetryErrorCategory)

	// TestUpdownCounter - Test metric for updown counters.
	TestUpdownCounter(inc int64)

	// TestUpdownCounterWithAttrs - Test metric for updown counters with attributes.
	TestUpdownCounterWithAttrs(inc int64, requestType RequestType)
}

// FsErrorCategory is a custom type for the FsErrorCategory attribute.
type FsErrorCategory string

const (
	// FsErrorCategoryDEVICEERROR is the "DEVICE_ERROR" value for the FsErrorCategory type.
	FsErrorCategoryDEVICEERROR FsErrorCategory = "DEVICE_ERROR"
	// FsErrorCategoryDIRNOTEMPTY is the "DIR_NOT_EMPTY" value for the FsErrorCategory type.
	FsErrorCategoryDIRNOTEMPTY FsErrorCategory = "DIR_NOT_EMPTY"
	// FsErrorCategoryFILEDIRERROR is the "FILE_DIR_ERROR" value for the FsErrorCategory type.
	FsErrorCategoryFILEDIRERROR FsErrorCategory = "FILE_DIR_ERROR"
	// FsErrorCategoryFILEEXISTS is the "FILE_EXISTS" value for the FsErrorCategory type.
	FsErrorCategoryFILEEXISTS FsErrorCategory = "FILE_EXISTS"
	// FsErrorCategoryINTERRUPTERROR is the "INTERRUPT_ERROR" value for the FsErrorCategory type.
	FsErrorCategoryINTERRUPTERROR FsErrorCategory = "INTERRUPT_ERROR"
	// FsErrorCategoryINVALIDARGUMENT is the "INVALID_ARGUMENT" value for the FsErrorCategory type.
	FsErrorCategoryINVALIDARGUMENT FsErrorCategory = "INVALID_ARGUMENT"
	// FsErrorCategoryINVALIDOPERATION is the "INVALID_OPERATION" value for the FsErrorCategory type.
	FsErrorCategoryINVALIDOPERATION FsErrorCategory = "INVALID_OPERATION"
	// FsErrorCategoryIOERROR is the "IO_ERROR" value for the FsErrorCategory type.
	FsErrorCategoryIOERROR FsErrorCategory = "IO_ERROR"
	// FsErrorCategoryMISCERROR is the "MISC_ERROR" value for the FsErrorCategory type.
	FsErrorCategoryMISCERROR FsErrorCategory = "MISC_ERROR"
	// FsErrorCategoryNETWORKERROR is the "NETWORK_ERROR" value for the FsErrorCategory type.
	FsErrorCategoryNETWORKERROR FsErrorCategory = "NETWORK_ERROR"
	// FsErrorCategoryNOFILEORDIR is the "NO_FILE_OR_DIR" value for the FsErrorCategory type.
	FsErrorCategoryNOFILEORDIR FsErrorCategory = "NO_FILE_OR_DIR"
	// FsErrorCategoryNOTADIR is the "NOT_A_DIR" value for the FsErrorCategory type.
	FsErrorCategoryNOTADIR FsErrorCategory = "NOT_A_DIR"
	// FsErrorCategoryNOTIMPLEMENTED is the "NOT_IMPLEMENTED" value for the FsErrorCategory type.
	FsErrorCategoryNOTIMPLEMENTED FsErrorCategory = "NOT_IMPLEMENTED"
	// FsErrorCategoryPERMERROR is the "PERM_ERROR" value for the FsErrorCategory type.
	FsErrorCategoryPERMERROR FsErrorCategory = "PERM_ERROR"
	// FsErrorCategoryPROCESSRESOURCEMGMTERROR is the "PROCESS_RESOURCE_MGMT_ERROR" value for the FsErrorCategory type.
	FsErrorCategoryPROCESSRESOURCEMGMTERROR FsErrorCategory = "PROCESS_RESOURCE_MGMT_ERROR"
	// FsErrorCategoryTOOMANYOPENFILES is the "TOO_MANY_OPEN_FILES" value for the FsErrorCategory type.
	FsErrorCategoryTOOMANYOPENFILES FsErrorCategory = "TOO_MANY_OPEN_FILES"
)

// FsOp is a custom type for the FsOp attribute.
type FsOp string

const (
	// FsOpBatchForget is the "BatchForget" value for the FsOp type.
	FsOpBatchForget FsOp = "BatchForget"
	// FsOpCreateFile is the "CreateFile" value for the FsOp type.
	FsOpCreateFile FsOp = "CreateFile"
	// FsOpCreateLink is the "CreateLink" value for the FsOp type.
	FsOpCreateLink FsOp = "CreateLink"
	// FsOpCreateSymlink is the "CreateSymlink" value for the FsOp type.
	FsOpCreateSymlink FsOp = "CreateSymlink"
	// FsOpFallocate is the "Fallocate" value for the FsOp type.
	FsOpFallocate FsOp = "Fallocate"
	// FsOpFlushFile is the "FlushFile" value for the FsOp type.
	FsOpFlushFile FsOp = "FlushFile"
	// FsOpForgetInode is the "ForgetInode" value for the FsOp type.
	FsOpForgetInode FsOp = "ForgetInode"
	// FsOpGetInodeAttributes is the "GetInodeAttributes" value for the FsOp type.
	FsOpGetInodeAttributes FsOp = "GetInodeAttributes"
	// FsOpGetXattr is the "GetXattr" value for the FsOp type.
	FsOpGetXattr FsOp = "GetXattr"
	// FsOpListXattr is the "ListXattr" value for the FsOp type.
	FsOpListXattr FsOp = "ListXattr"
	// FsOpLookUpInode is the "LookUpInode" value for the FsOp type.
	FsOpLookUpInode FsOp = "LookUpInode"
	// FsOpMkDir is the "MkDir" value for the FsOp type.
	FsOpMkDir FsOp = "MkDir"
	// FsOpMkNode is the "MkNode" value for the FsOp type.
	FsOpMkNode FsOp = "MkNode"
	// FsOpOpenDir is the "OpenDir" value for the FsOp type.
	FsOpOpenDir FsOp = "OpenDir"
	// FsOpOpenFile is the "OpenFile" value for the FsOp type.
	FsOpOpenFile FsOp = "OpenFile"
	// FsOpReadDir is the "ReadDir" value for the FsOp type.
	FsOpReadDir FsOp = "ReadDir"
	// FsOpReadDirPlus is the "ReadDirPlus" value for the FsOp type.
	FsOpReadDirPlus FsOp = "ReadDirPlus"
	// FsOpReadFile is the "ReadFile" value for the FsOp type.
	FsOpReadFile FsOp = "ReadFile"
	// FsOpReadSymlink is the "ReadSymlink" value for the FsOp type.
	FsOpReadSymlink FsOp = "ReadSymlink"
	// FsOpReleaseDirHandle is the "ReleaseDirHandle" value for the FsOp type.
	FsOpReleaseDirHandle FsOp = "ReleaseDirHandle"
	// FsOpReleaseFileHandle is the "ReleaseFileHandle" value for the FsOp type.
	FsOpReleaseFileHandle FsOp = "ReleaseFileHandle"
	// FsOpRemoveXattr is the "RemoveXattr" value for the FsOp type.
	FsOpRemoveXattr FsOp = "RemoveXattr"
	// FsOpRename is the "Rename" value for the FsOp type.
	FsOpRename FsOp = "Rename"
	// FsOpRmDir is the "RmDir" value for the FsOp type.
	FsOpRmDir FsOp = "RmDir"
	// FsOpSetInodeAttributes is the "SetInodeAttributes" value for the FsOp type.
	FsOpSetInodeAttributes FsOp = "SetInodeAttributes"
	// FsOpSetXattr is the "SetXattr" value for the FsOp type.
	FsOpSetXattr FsOp = "SetXattr"
	// FsOpStatFS is the "StatFS" value for the FsOp type.
	FsOpStatFS FsOp = "StatFS"
	// FsOpSyncFS is the "SyncFS" value for the FsOp type.
	FsOpSyncFS FsOp = "SyncFS"
	// FsOpSyncFile is the "SyncFile" value for the FsOp type.
	FsOpSyncFile FsOp = "SyncFile"
	// FsOpUnlink is the "Unlink" value for the FsOp type.
	FsOpUnlink FsOp = "Unlink"
	// FsOpWriteFile is the "WriteFile" value for the FsOp type.
	FsOpWriteFile FsOp = "WriteFile"
)

// GcsMethod is a custom type for the GcsMethod attribute.
type GcsMethod string

const (
	// GcsMethodComposeObjects is the "ComposeObjects" value for the GcsMethod type.
	GcsMethodComposeObjects GcsMethod = "ComposeObjects"
	// GcsMethodCopyObject is the "CopyObject" value for the GcsMethod type.
	GcsMethodCopyObject GcsMethod = "CopyObject"
	// GcsMethodCreateAppendableObjectWriter is the "CreateAppendableObjectWriter" value for the GcsMethod type.
	GcsMethodCreateAppendableObjectWriter GcsMethod = "CreateAppendableObjectWriter"
	// GcsMethodCreateFolder is the "CreateFolder" value for the GcsMethod type.
	GcsMethodCreateFolder GcsMethod = "CreateFolder"
	// GcsMethodCreateObject is the "CreateObject" value for the GcsMethod type.
	GcsMethodCreateObject GcsMethod = "CreateObject"
	// GcsMethodCreateObjectChunkWriter is the "CreateObjectChunkWriter" value for the GcsMethod type.
	GcsMethodCreateObjectChunkWriter GcsMethod = "CreateObjectChunkWriter"
	// GcsMethodDeleteFolder is the "DeleteFolder" value for the GcsMethod type.
	GcsMethodDeleteFolder GcsMethod = "DeleteFolder"
	// GcsMethodDeleteObject is the "DeleteObject" value for the GcsMethod type.
	GcsMethodDeleteObject GcsMethod = "DeleteObject"
	// GcsMethodFinalizeUpload is the "FinalizeUpload" value for the GcsMethod type.
	GcsMethodFinalizeUpload GcsMethod = "FinalizeUpload"
	// GcsMethodFlushPendingWrites is the "FlushPendingWrites" value for the GcsMethod type.
	GcsMethodFlushPendingWrites GcsMethod = "FlushPendingWrites"
	// GcsMethodGetFolder is the "GetFolder" value for the GcsMethod type.
	GcsMethodGetFolder GcsMethod = "GetFolder"
	// GcsMethodListObjects is the "ListObjects" value for the GcsMethod type.
	GcsMethodListObjects GcsMethod = "ListObjects"
	// GcsMethodMoveObject is the "MoveObject" value for the GcsMethod type.
	GcsMethodMoveObject GcsMethod = "MoveObject"
	// GcsMethodMultiRangeDownloaderAdd is the "MultiRangeDownloader::Add" value for the GcsMethod type.
	GcsMethodMultiRangeDownloaderAdd GcsMethod = "MultiRangeDownloader::Add"
	// GcsMethodNewMultiRangeDownloader is the "NewMultiRangeDownloader" value for the GcsMethod type.
	GcsMethodNewMultiRangeDownloader GcsMethod = "NewMultiRangeDownloader"
	// GcsMethodNewReader is the "NewReader" value for the GcsMethod type.
	GcsMethodNewReader GcsMethod = "NewReader"
	// GcsMethodRenameFolder is the "RenameFolder" value for the GcsMethod type.
	GcsMethodRenameFolder GcsMethod = "RenameFolder"
	// GcsMethodStatObject is the "StatObject" value for the GcsMethod type.
	GcsMethodStatObject GcsMethod = "StatObject"
	// GcsMethodUpdateObject is the "UpdateObject" value for the GcsMethod type.
	GcsMethodUpdateObject GcsMethod = "UpdateObject"
)

// IoMethod is a custom type for the IoMethod attribute.
type IoMethod string

const (
	// IoMethodClosed is the "closed" value for the IoMethod type.
	IoMethodClosed IoMethod = "closed"
	// IoMethodOpened is the "opened" value for the IoMethod type.
	IoMethodOpened IoMethod = "opened"
	// IoMethodReadHandle is the "ReadHandle" value for the IoMethod type.
	IoMethodReadHandle IoMethod = "ReadHandle"
)

// ReadType is a custom type for the ReadType attribute.
type ReadType string

const (
	// ReadTypeParallel is the "Parallel" value for the ReadType type.
	ReadTypeParallel ReadType = "Parallel"
	// ReadTypeRandom is the "Random" value for the ReadType type.
	ReadTypeRandom ReadType = "Random"
	// ReadTypeSequential is the "Sequential" value for the ReadType type.
	ReadTypeSequential ReadType = "Sequential"
)

// Reason is a custom type for the Reason attribute.
type Reason string

const (
	// ReasonInsufficientMemory is the "insufficient_memory" value for the Reason type.
	ReasonInsufficientMemory Reason = "insufficient_memory"
	// ReasonRandomReadDetected is the "random_read_detected" value for the Reason type.
	ReasonRandomReadDetected Reason = "random_read_detected"
)

// RequestType is a custom type for the RequestType attribute.
type RequestType string

const (
	// RequestTypeAttr1 is the "attr1" value for the RequestType type.
	RequestTypeAttr1 RequestType = "attr1"
	// RequestTypeAttr2 is the "attr2" value for the RequestType type.
	RequestTypeAttr2 RequestType = "attr2"
)

// RetryErrorCategory is a custom type for the RetryErrorCategory attribute.
type RetryErrorCategory string

const (
	// RetryErrorCategoryOTHERERRORS is the "OTHER_ERRORS" value for the RetryErrorCategory type.
	RetryErrorCategoryOTHERERRORS RetryErrorCategory = "OTHER_ERRORS"
	// RetryErrorCategorySTALLEDREADREQUEST is the "STALLED_READ_REQUEST" value for the RetryErrorCategory type.
	RetryErrorCategorySTALLEDREADREQUEST RetryErrorCategory = "STALLED_READ_REQUEST"
)

// Status is a custom type for the Status attribute.
type Status string

const (
	// StatusCancelled is the "cancelled" value for the Status type.
	StatusCancelled Status = "cancelled"
	// StatusFailed is the "failed" value for the Status type.
	StatusFailed Status = "failed"
	// StatusSuccessful is the "successful" value for the Status type.
	StatusSuccessful Status = "successful"
)
