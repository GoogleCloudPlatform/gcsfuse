#################################### DOCUMENTATION STARTS ######################
# Params structure
# flag-name: Name of the CLI flag.
# config-path: Location of the param in the config file. A value of "gcs-auth.anonymous-access" indicates that the param will be present under the gcs-auth:anonymous-access.
# type: data type of the param - supports the following values: ["int", "float64", "bool", "string", "duration", "octal", "[]int",
#			"[]string", "url", "logSeverity", "protocol", "resolvedPath"]
# usage: The usage doc that will appear in the helpdoc
# default: The default value of the param.
# deprecated: Specifies whether the param is deprecated. This will cause warnings when the user specifies the flag.
# deprecationWarning: The warning that should be issued when the user specifies a deprecated flag.
# hide-flag: Whether to hide flag from the helpdoc.
###################################### DOCUMENTATION ENDS ######################

- flag-name: "app-name"
  config-path: "app-name"
  type: "string"
  usage: "The application name of this mount."
  default: ""

- flag-name: "foreground"
  config-path: "foreground"
  type: "bool"
  usage: "Stay in the foreground after mounting."
  default: false

- flag-name: "o"
  config-path: "file-system.fuse-options"
  type: "[]string"
  usage: "Additional system-specific mount options. Multiple options can be passed as comma separated. For readonly, use --o ro"

- flag-name: "dir-mode"
  config-path: "file-system.dir-mode"
  type: "octal"
  usage: "Permissions bits for directories, in octal."
  default: "0755"

- flag-name: "file-mode"
  config-path: "file-system.file-mode"
  type: "octal"
  usage: "Permissions bits for files, in octal."
  default: "0644"

- flag-name: "uid"
  config-path: "file-system.uid"
  type: "int"
  default: -1
  usage: "UID owner of all inodes."

- flag-name: "gid"
  config-path: "file-system.gid"
  type: "int"
  default: -1
  usage: "GID owner of all inodes."

- flag-name: "implicit-dirs"
  config-path: "implicit-dirs"
  type: "bool"
  usage: "Implicitly define directories based on content. See files and directories in docs/semantics for more information"
  default: false

- flag-name: "only-dir"
  config-path: "only-dir"
  type: "string"
  usage: "Mount only a specific directory within the bucket. See docs/mounting for more information"
  default: ""

- flag-name: "rename-dir-limit"
  config-path: "file-system.rename-dir-limit"
  type: "int"
  usage: "Allow rename a directory containing fewer descendants than this limit."
  default: "0"

- flag-name: "ignore-interrupts"
  config-path: "file-system.ignore-interrupts"
  type: "bool"
  usage: >-
    Instructs gcsfuse to ignore system interrupt signals (like SIGINT, triggered
    by Ctrl+C). This prevents those signals from immediately terminating gcsfuse
    inflight operations. (default: true)
  default: true

- flag-name: "disable-parallel-dirops"
  config-path: "file-system.disable-parallel-dirops"
  type: "bool"
  usage: "Specifies whether to allow parallel dir operations (lookups and readers)"
  default: false
  hide-flag: true

- flag-name: "custom-endpoint"
  config-path: "gcs-connection.custom-endpoint"
  type: "url"
  usage: >-
    Specifies an alternative custom endpoint for fetching data. Should only be
    used for testing.  The custom endpoint must support the equivalent resources
    and operations as the GCS  JSON endpoint,
    https://storage.googleapis.com/storage/v1. If a custom endpoint is not
    specified,  GCSFuse uses the global GCS JSON API endpoint,
    https://storage.googleapis.com/storage/v1.

- flag-name: "anonymous-access"
  config-path: "gcs-auth.anonymous-access"
  type: "bool"
  usage: "Authentication is enabled by default. This flag disables authentication"
  default: false

- flag-name: "billing-project"
  config-path: "gcs-connection.billing-project"
  type: "string"
  usage: >-
    Project to use for billing when accessing a bucket enabled with "Requester
    Pays". (The default is none)
  default: ""

- flag-name: "key-file"
  config-path: "gcs-auth.key-file"
  type: "resolvedPath"
  usage: "Absolute path to JSON key file for use with GCS. (The default is none, Google application default credentials used)"

- flag-name: "token-url"
  config-path: "gcs-auth.token-url"
  type: "string"
  usage: "A url for getting an access token when the key-file is absent."
  default: ""

- flag-name: "reuse-token-from-url"
  config-path: "gcs-auth.reuse-token-from-url"
  type: "bool"
  usage: "If false, the token acquired from token-url is not reused."
  default: "true"

- flag-name: "limit-bytes-per-sec"
  config-path: "gcs-connection.limit-bytes-per-sec"
  type: "float64"
  usage: "Bandwidth limit for reading data, measured over a 30-second window. (use -1 for no limit)"
  default: "-1"

- flag-name: "limit-ops-per-sec"
  config-path: "gcs-connection.limit-ops-per-sec"
  type: "float64"
  usage: "Operations per second limit, measured over a 30-second window (use -1 for no limit)"
  default: "-1"

- flag-name: "sequential-read-size-mb"
  config-path: "gcs-connection.sequential-read-size-mb"
  type: "int"
  usage: "File chunk size to read from GCS in one call. Need to specify the value in MB. ChunkSize less than 1MB is not supported"
  default: "200"

- flag-name: "max-retry-sleep"
  config-path: "gcs-retries.max-retry-sleep"
  type: "duration"
  usage: >-
    The maximum duration allowed to sleep in a retry loop with exponential
    backoff for failed requests to GCS backend. Once the backoff duration
    exceeds this limit, the retry continues with this specified maximum value.
  default: "30s"

- flag-name: "stat-cache-max-size-mb"
  config-path: "metadata-cache.stat-cache-max-size-mb"
  type: "int"
  usage: >-
    The maximum size of stat-cache in MiBs. It can also be set to -1 for
    no-size-limit, 0 for no cache. Values below -1 are not supported.
  default: "32"

- flag-name: "type-cache-max-size-mb"
  config-path: "metadata-cache.type-cache-max-size-mb"
  type: "int"
  usage: "Max size of type-cache maps which are maintained at a per-directory level."
  default: "4"

- flag-name: "metadata-cache-ttl"
  config-path: "metadata-cache.ttl-secs"
  type: "int"
  usage: >-
    The ttl value in seconds to be used for expiring items in metadata-cache. It
    can be set to -1 for no-ttl, 0 for no cache and > 0 for ttl-controlled
    metadata-cache. Any value set below -1 will throw an error."
  default: "60"

- flag-name: "stat-cache-capacity"
  config-path: "metadata-cache.deprecated-stat-cache-capacity"
  type: "int"
  usage: >-
    How many entries can the stat-cache hold (impacts memory consumption). This
    flag has been deprecated (starting v2.0) and in favor of
    stat-cache-max-size-mb. For now, the value of stat-cache-capacity will be
    translated to the next higher corresponding value of stat-cache-max-size-mb
    (assuming stat-cache entry-size ~= 1640 bytes, including 1400 for positive
    entry and 240 for corresponding negative entry), if stat-cache-max-size-mb
    is not set."
  deprecated: true
  deprecation-warning: >-
    This flag has been deprecated (starting v2.0) in favor of
    stat-cache-max-size-mb.
  default: "20460"

- flag-name: "stat-cache-ttl"
  config-path: "metadata-cache.deprecated-stat-cache-ttl"
  type: "duration"
  usage: >-
    How long to cache StatObject results and inode attributes. This flag
    has been deprecated (starting v2.0) in favor of metadata-cache-ttl-secs. For
    now, the minimum of stat-cache-ttl and type-cache-ttl values, rounded up to
    the next higher multiple of a second is used as ttl for both stat-cache and
    type-cache, when metadata-cache-ttl-secs is not set.
  default: "60s"
  deprecated: true
  deprecation-warning: >-
    This flag has been deprecated (starting v2.0) in favor of
    metadata-cache-ttl-secs.

- flag-name: "type-cache-ttl"
  config-path: "metadata-cache.deprecated-type-cache-ttl"
  type: "duration"
  usage: >-
    Usage: How long to cache StatObject results and inode attributes. This flag
    has been deprecated (starting v2.0) in favor of metadata-cache-ttl-secs. For
    now, the minimum of stat-cache-ttl and type-cache-ttl values, rounded up to
    the next higher multiple of a second is used as ttl for both stat-cache and
    type-cache, when metadata-cache-ttl-secs is not set.
  default: "60s"
  deprecated: true
  deprecation-warning: >-
    This flag has been deprecated (starting v2.0) in favor of
    metadata-cache-ttl-secs.

- flag-name: "kernel-list-cache-ttl-secs"
  config-path: "file-system.kernel-list-cache-ttl-secs"
  type: "int"
  usage: >-
    How long the directory listing (output of ls <dir>) should be cached in the
    kernel page cache. If a particular directory cache entry is kept by kernel
    for longer than TTL, then it will be sent for invalidation by gcsfuse on
    next opendir (comes in the start, as part of next listing) call. 0 means no
    caching. Use -1 to cache for lifetime (no ttl). Negative value other than -1
    will throw error.
  default: "0"

- flag-name: "http-client-timeout"
  config-path: "gcs-connection.http-client-timeout"
  type: "duration"
  usage: >-
    The time duration that http client will wait to get response from the
    server. The default value 0 indicates no timeout.
  default: "0s"

- flag-name: "max-retry-duration"
  type: "duration"
  usage: "This is currently unused."
  default: "0s"
  deprecated: true
  deprecation-warning: "This is currently unused."

- flag-name: "retry-multiplier"
  config-path: "gcs-retries.multiplier"
  type: "float64"
  usage: Param for exponential backoff algorithm, which is used to increase waiting time b/w two consecutive retries.
  default: 2

- flag-name: "temp-dir"
  config-path: "file-system.temp-dir"
  type: "resolvedPath"
  usage: >-
    Path to the temporary directory where writes are staged prior to upload to
    Cloud Storage. (default: system default, likely /tmp)"
  default: ""

- flag-name: "client-protocol"
  config-path: "gcs-connection.client-protocol"
  type: "protocol"
  usage: >-
    The protocol used for communicating with the GCS backend.
    Value can be 'http1' (HTTP/1.1), 'http2' (HTTP/2) or 'grpc'.
  default: "http1"

- flag-name: "max-conns-per-host"
  config-path: "gcs-connection.max-conns-per-host"
  type: "int"
  usage: >-
    The max number of TCP connections allowed per server. This is effective when
    client-protocol is set to 'http1'. The default value 0 indicates no limit on
    TCP connections (limited by the machine specifications).
  default: "0"

- flag-name: "max-idle-conns-per-host"
  config-path: "gcs-connection.max-idle-conns-per-host"
  type: "int"
  usage: "The number of maximum idle connections allowed per server."
  default: "100"

- flag-name: "enable-nonexistent-type-cache"
  config-path: "metadata-cache.enable-nonexistent-type-cache"
  type: "bool"
  usage: >-
    Once set, if an inode is not found in GCS, a type cache entry with type
    NonexistentType will be created. This also means new file/dir created might
    not be seen. For example, if this flag is set, and metadata-cache-ttl-secs
    is set, then if we create the same file/node in the meantime using the same
    mount, since we are not refreshing the cache, it will still return nil.
  default: false

- flag-name: "stackdriver-export-interval"
  config-path: "metrics.stackdriver-export-interval"
  type: "duration"
  usage: >-
    Export metrics to stackdriver with this interval. The default value 0
    indicates no exporting.
  default: "0s"

- flag-name: "experimental-opentelemetry-collector-address"
  config-path: "monitoring.experimental-opentelemetry-collector-address"
  type: "string"
  usage: "Experimental: Export metrics to the OpenTelemetry collector at this address."
  default: ""
  deprecated: true
  deprecation-warning: "Experimental flag: could be dropped even in a minor release."

- flag-name: "log-file"
  config-path: "logging.file-path"
  type: "resolvedPath"
  usage: >-
    The file for storing logs that can be parsed by fluentd. When not provided,
    plain text logs are printed to stdout when Cloud Storage FUSE is run 
    in the foreground, or to syslog when Cloud Storage FUSE is run in the 
    background.

- flag-name: "log-format"
  config-path: "logging.format"
  type: "string"
  usage: "The format of the log file: 'text' or 'json'."
  default: "json"

- flag-name: "experimental-enable-json-read"
  config-path: "gcs-connection.experimental-enable-json-read"
  type: "bool"
  usage: >-
    By default, GCSFuse uses the GCS XML API to get and read objects. When this
    flag is specified, GCSFuse uses the GCS JSON API instead."
  default: false
  deprecated: true
  deprecation-warning: "Experimental flag: could be dropped even in a minor release."

- flag-name: "debug_fuse_errors"
  type: "bool"
  usage: "This flag is currently unused."
  default: "true"
  deprecated: true
  deprecation-warning: "This flag is currently unused."

- flag-name: "debug_fuse"
  config-path: "debug.fuse"
  type: "bool"
  usage: "This flag is unused. Debug fuse logs are now controlled by log-severity flag, please use log-severity trace to view the logs."
  default: false
  deprecated: true
  deprecation-warning: "debug fuse logs are now controlled by log-severity flag, please use log-severity trace to view the logs."

- flag-name: "debug_fs"
  type: "bool"
  usage: "This flag is unused."
  default: false
  deprecated: true
  deprecation-warning: "Debug fuse logs are now controlled by log-severity flag, please use log-severity trace to view the logs."

- flag-name: "debug_gcs"
  config-path: "debug.gcs"
  type: "bool"
  usage: "Debug GCS logs are now controlled by log-severity flag, please use log-severity trace to view the logs."
  default: false
  deprecated: true
  deprecation-warning: "This flag is currently unused."

- flag-name: "debug_http"
  type: "bool"
  usage: "This flag is currently unused."
  default: false
  deprecated: true
  deprecation-warning: "This flag is currently unused."

- flag-name: "debug_invariants"
  config-path: "debug.exit-on-invariant-violation"
  type: "bool"
  usage: "Exit when internal invariants are violated."
  default: false

- flag-name: "debug_mutex"
  config-path: "debug.log-mutex"
  type: "bool"
  usage: "Print debug messages when a mutex is held too long."
  default: false

- flag-name: "experimental-metadata-prefetch-on-mount"
  config-path: "metadata-cache.experimental-metadata-prefetch-on-mount"
  type: "string"
  usage: >-
    Experimental: This indicates whether or not to prefetch the metadata
    (prefilling of metadata caches and creation of inodes) of the mounted bucket
    at the time of mounting the bucket. Supported values: "disabled", "sync" and
    "async". Any other values will return error on mounting. This is applicable
    only to static mounting, and not to dynamic mounting.
  default: "disabled"
  deprecated: true
  deprecation-warning: "Experimental flag: could be removed even in a minor release."

- flag-name: "create-empty-file"
  config-path: "write.create-empty-file"
  type: "bool"
  usage: "For a new file, it creates an empty file in Cloud Storage bucket as a
  hold."
  default: false
  deprecated: true
  deprecation-warning: "This flag will be deleted soon."

- flag-name: "log-severity"
  config-path: "logging.severity"
  type: "logSeverity"
  usage: "Specifies the logging severity expressed as one of [trace, debug, info, warning, error, off]"
  default: "info"

- flag-name: "file-cache-max-size-mb"
  config-path: "file-cache.max-size-mb"
  type: "int"
  usage: "Maximum size of the file-cache in MiBs"
  default: "-1"

- flag-name: "cache-file-for-range-read"
  config-path: "file-cache.cache-file-for-range-read"
  type: "bool"
  usage: "Whether to cache file for range reads."
  default: false

- flag-name: "enable-crc"
  config-path: "file-cache.enable-crc"
  type: "bool"
  usage: "Performs CRC to ensure that file is correctly downloaded into cache."
  default: false

- flag-name: "enable-parallel-downloads"
  config-path: "file-cache.enable-parallel-downloads"
  type: "bool"
  usage: "Enable parallel downloads."
  default: false

- flag-name: "parallel-downloads-per-file"
  config-path: "file-cache.parallel-downloads-per-file"
  type: "int"
  usage: "Number of concurrent download requests per file."
  default: "16"

- flag-name: "max-parallel-downloads"
  config-path: "file-cache.max-parallel-downloads"
  type: "int"
  usage: "Sets an uber limit of number of concurrent file download requests that are made across all files."
  default: "config.DefaultMaxParallelDownloads()"

- flag-name: "download-chunk-size-mb"
  config-path: "file-cache.download-chunk-size-mb"
  type: "int"
  usage: "Size of chunks in MiB that each concurrent request downloads."
  default: "50"

- flag-name: "cache-dir"
  config-path: "cache-dir"
  type: "resolvedPath"
  usage: "Enables file-caching. Specifies the directory to use for file-cache."

- flag-name: "enable-empty-managed-folders"
  config-path: "list.enable-empty-managed-folders"
  type: "bool"
  usage: >-
    This handles the corner case in listing managed folders.
    There are two corner cases (a) empty managed folder (b) nested managed folder which doesn't contain any descendent as object.
    This flag always works in conjunction with --implicit-dirs flag.
    (a) If only ImplicitDirectories is true, all managed folders are listed other than above two mentioned cases.
    (b) If both ImplicitDirectories and EnableEmptyManagedFolders are true, then all the managed folders are listed including the above-mentioned corner case.
    (c) If ImplicitDirectories is false then no managed folders are listed irrespective of enable-empty-managed-folders flag.
  default: false

- flag-name: "experimental-grpc-conn-pool-size"
  config-path: "gcs-connection.grpc-conn-pool-size"
  type: "int"
  usage: "The number of gRPC channel in grpc client."
  default: "0"
  deprecated: true
  deprecation-warning: "Experimental flag: can be removed in a minor release."

- flag-name: "enable-hns"
  config-path: "enable-hns"
  type: "bool"
  usage: "Enables support for HNS buckets"
  default: false

- flag-name: "log-rotate-max-log-file-size-mb"
  config-path: "logging.log-rotate.max-file-size-mb"
  type: "int"
  usage: "The maximum size in megabytes that a log file can reach before it is rotated."
  default: "512"

- flag-name: "log-rotate-backup-file-count"
  config-path: "logging.log-rotate.backup-file-count"
  type: "int"
  usage: >-
    The maximum number of backup log files to retain after they have been
    rotated. The default value is 10. When value is set to 0, all backup files are
    retained.
  default: "10"

- flag-name: "log-rotate-compress"
  config-path: "logging.log-rotate.compress"
  type: "bool"
  usage: "Controls whether the rotated log files should be compressed using gzip."
  default: "true"
